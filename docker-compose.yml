version: "3.3"
services:


  postgresql:
    image: "docker.io/bitnami/postgresql:11"
    container_name: postgresql
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
    volumes:
      - "postgresql_data:/bitnami/postgresql"

  keycloak-1:
    image: docker.io/bitnami/keycloak:latest
    container_name: keycloak-1
    ports:
      - "80:8080"
    # volumes:
    # - ./standalone1-ha.xml:/bitnami/keycloak/configuration/standalone-ha.xml:ro
    environment:
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_JGROUPS_DISCOVERY_PROTOCOL=JDBC_PING
      - 'KEYCLOAK_JGROUPS_DISCOVERY_PROPERTIES=datasource_jndi_name=>java:jboss/datasources/KeycloakDS, initialize_sql=>"CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"'
      - KEYCLOAK_CACHE_OWNERS_COUNT=3
      - KEYCLOAK_AUTH_CACHE_OWNERS_COUNT=3
    depends_on:
      - postgresql

  # keycloak-2:
  #   container_name: keycloak-3
  #   image: docker.io/bitnami/keycloak:latest
  #   ports:
  #     - "81:8080"
  #   volumes:
  # - ./standalone2-ha.xml:/bitnami/keycloak/configuration/standalone-ha.xml:ro
  #   depends_on:
  #     - postgresql
  #   environment:
  #     - KEYCLOAK_JGROUPS_DISCOVERY_PROTOCOL=JDBC_PING
  #     - 'KEYCLOAK_JGROUPS_DISCOVERY_PROPERTIES=datasource_jndi_name=>java:jboss/datasources/KeycloakDS, initialize_sql=>"CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"'
  #     - KEYCLOAK_CACHE_OWNERS_COUNT=3
  #     - KEYCLOAK_AUTH_CACHE_OWNERS_COUNT=3

  # keycloak-3:
  #   container_name: keycloak-3
  #   image: docker.io/bitnami/keycloak:latest
  #   ports:
  #     - "82:8080"
  #   volumes:
  # - ./standalone3-ha.xml:/bitnami/keycloak/configuration/standalone-ha.xml:ro
  #   depends_on:
  #     - postgresql
  #   environment:
  #     - KEYCLOAK_JGROUPS_DISCOVERY_PROTOCOL=JDBC_PING
  #     - 'KEYCLOAK_JGROUPS_DISCOVERY_PROPERTIES=datasource_jndi_name=>java:jboss/datasources/KeycloakDS, initialize_sql=>"CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"'
  #     - KEYCLOAK_CACHE_OWNERS_COUNT=3
  #     - KEYCLOAK_AUTH_CACHE_OWNERS_COUNT=3

  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    depends_on:
    - postgres
    ports:
    - 5050:80
    ## you can change pgAdmin default username/password with below environment variables
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin

  graphql-engine:
    image: hasura/graphql-engine:v2.5.1
    container_name: graphql-engine
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    - "keycloak-1"
    # - "keycloak-2"
    # - "keycloak-3"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_JWT_SECRET: '{"jwk_url": "http://keycloak-1:8080/auth/realms/master/protocol/openid-connect/certs","type": "HS256"}'

  
volumes:
  postgresql_data:
    driver: local
  db_data:
    driver: local